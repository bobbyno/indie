h1. Indie - A Neo4j Unmanaged Extension SDK

"Unmanaged Extensions":http://docs.neo4j.org/chunked/stable/server-unmanaged-extensions.html provide a way to extend the capabilities of the Neo4j server with the full power of the JDK.

A few use cases for Unmanaged Extensions include: 
* Customizing Neo4j's default RESTful interface
* Extending the library of Neo4j's "built-in graph algorithms":http://docs.neo4j.org/chunked/milestone/rest-api-graph-algos.html 
* Integrating Neo4j with other database or messaging systems
* Maximizing performance of server-side operations
* Programming graph algorithms in other JVM languages such as Clojure, Scala, and Groovy

Indie establishes some useful conventions for Unmanaged Extension development by providing:

* Examples of some common use cases
* An application architecture that separates web request and graph algorithm concerns
* Automatic transaction management using the com.sun.jersey.spi.ClosableService interface
* A unit and functional test framework that cleans up the database after each test
* An Ant build script automating testing and distribution
* An embedded Gremlin console for ease of offline database maintenance


h2. Getting Started

Download the latest "Neo4j release":http://neo4j.org/download and unpack into the neo4j-server directory.

Open neo4j-server/neo$/conf/neo4j-server.properties

Set the following properties

```
org.neo4j.server.webserver.address=0.0.0.0
org.neo4j.server.thirdparty_jaxrs_classes=com.aurelius.indie.resources=/ext
```

Now compile Indie, copy the jar to Neo4j, create a distribution, unpack it, and start the server.

```
bin/build-and-run.sh
```

Indie comes bundled with a 'ping' extension that will let you ensure that your Unmanaged Extension is working correctly.

Visit http://localhost:7474/ext/ping

h2. Development

h3. IDE configuration

The project includes .ipr and .iml files compatible with IntelliJ 11. If you aren't using IntelliJ, add the jars in the following
directories:

* neo4j-server/neo$/lib
* neo4j-server/neo$/system/lib
* lib/test

h3. Build and Deployment

View a list of available Ant targets with

```
ant -p
```

A high-level distribution cycle will look something like:

```
ant dist
cd dist
tar -zxvf indie.tar.gz
neo4j*/bin/neo4j start
```

h2. Compatibility

Indie has been tested with the Community, Advanced, and Enterprise editions of Neo4j 1.6.1 on a Unix-based system. 
Indie should be able to work on Windows, but some of the scripts will need to change and the documentation needs to be updated.

h2. License

Indie uses an Apache 2.0 license. See the enclosed LICENSE.txt and NOTICE.txt for more information.

h2. More Information

If you're new to graph databases, "Getting started with Gremlin":http://github.com/tinkerpop/gremlin/wiki/Getting-Started will help you quickly get up and running with a REPL. Gremlin supports Neo4j out of the box, and the examples in Indie use Gremlin extensively.

For comprehensive documentation about Neo4j, see the "Neo4j Manual":http://docs.neo4j.org/chunked/milestone/index.html.

h2. Community

Help for Neo4j and Unmanaged Extensions are available on the "Neo4j Discussion Group":http://groups.google.com/forum/?fromgroups#!forum/neo4j
