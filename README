# Indie - A Neo4j Unmanaged Extension SDK

Unmanaged Extensions provide a way to extend the functionality of the Neo4j Server with the full power of the JDK ecosystem.
Indie establishes some useful conventions for the development of Unmanaged Extensions by providing:

* An application architecture
* Repeatable unit and functional tests
* An Ant build script
* An embedded Gremlin console for server maintenance


# Getting Started

Indie comes bundled with a 'ping' extension that will let you ensure that your Unmanaged Extension is working correctly.

* download the latest release from http://neo4j.org/download and copy into the neo4j-server directory

* start the new server to verify an initially working starting state. Shut down after visiting the server home page.

* Update neo4j*.properties files in conf directories
* conf/neo4j-server.properties
** set org.neo4j.server.thirdparty_jaxrs_classes
org.neo4j.server.thirdparty_jaxrs_classes=com.aurelius.indie.resources=/ext
** uncomment org.neo4j.server.webserver.address=0.0.0.0 to allow connections from other than localhost

* update the server-dir property in build/dist.xml to the new neo4j version

* update com.aurelius.indie.test.functional.Server.java with the new neo4j directory location

* bin/build-and-run.sh

* stop the server with

  dist/neo4j*/bin/neo4j stop


# Running a Build

    ant dist
    cd dist
    tar -zxvf indie-\$\{env.BUILD_VERSION\}.tar.gz
    cd neo4j-xxx # match the current version of neo4j
    ./bin/neo4j { console | start | stop | restart | status | dump }
    open http://localhost:7474

# Authors

Bobby Norton (bobby@thinkaurelius.com)


# Neo4j Background

http://docs.neo4j.org/chunked/stable/server-unmanaged-extensions.html

http://wiki.neo4j.org/content/Guidelines_for_Building_a_Neo4j_Application

http://wiki.neo4j.org/content/Design_Guide